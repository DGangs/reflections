Git commands:

git log - show list of commits in the current project directory.
	'q' - to exit git log output.
git log --stat - will show the files changed in each commit and summary of the number of changes.
git diff commit#1 commit#2 - show differences between these versions.
git diff - show differences between working directory and staging area.
git diff --staged -show differences between staging area and latest commits in the repository.
git diff HEAD -show differences between working directory and latest commit.

git config --global color.ui auto - set colored diff output.
git config --global core.editor "'C:/Program Files/Sublime Text 3/sublime_text.exe' -n -w" -set editor for diff file links.
git config --global push.default upstream
git config --global merge.conflictstyle diff3
git config --global core.autocrlf true -manage crlf lf differences on windows work machine.

git checkout commit# -pulls state of the requested commit into the current working directory.
git checkout master -returns to the master state in the working directory.
git checkout branchname -pulls state of the requested branch.
git checkout -b new_branchname -preserve checkout edits in a new branch.

git init -start a new repository with .git directory and no history.
git add filename1.txt -adds filename1.txt to staging for next commit.
git commit -m 'message about current commit' -creates new commit snapshot using staged files.
git status -identifies current staged files and untracked

git reset --hard -discards any changes in the working directory or staging area.
git branch -list existing branches in the repository.
git branch branchname -create a new branch called branchname.
git log --graph --oneline branch1 branch2 -displays commit comparison between branches.

git merge branch-merge-to branch-merge-from -merge two branches
git show commit# -git diff with commit parent (useful with interleaved branches present)
git branch -d branchname -delete referenced branch.
git merge --abort -restore files to state before attempted merge.

git remote -list remote repositories setup.
git remote add remote_name remote_url -add remote repository.
git remote -v -verbose command to show urls of remotes as well.
git push remote_name branch_name -push changes to remote repository.
git pull remote_name branch_name_on_remote -pull changes to local repository.

git clone remote_url.git -creates local repository clone with remote setup to the origin.
git fetch remote_name -updates local copy of remote repository as separate branch.
git pull remote_name branch_remote_name = git fetch remote_name + git merge local_branch_name remote/branch

cd~ to go to home directory.
mv - to move files to current directory

commit sizes- keep them at logical break points. And not too big.
